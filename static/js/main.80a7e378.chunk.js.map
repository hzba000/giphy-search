{"version":3,"sources":["components/Submission.js","Main.js","index.js"],"names":["urlArray","Submission","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","click","searchTerm","handleSubmit","bind","assertThisInitialized","fetchGiphyData","firstClick","setState","event","preventDefault","userSubmission","value","trim","_this2","fetch","concat","then","response","json","myJson","i","data","length","key","push","fixed_height","url","_this3","images","map","image","react_default","a","createElement","className","href","target","rel","src","alt","onSubmit","placeholder","ref","input","type","onClick","classname","React","Component","Main","_React$Component","inherits","createClass","Submission_Submission","ReactDOM","render","Main_Main","document","getElementById"],"mappings":"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","file":"static/js/main.80a7e378.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//this array will house gif urls\r\nlet urlArray = [];\r\n\r\nexport default class Submission extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            //click is false when on landing display and true when user has started using the app - toggles different render displays\r\n            click: false,\r\n            urlArray: null,\r\n            searchTerm: null,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.fetchGiphyData = this.fetchGiphyData.bind(this);\r\n        this.firstClick = this.firstClick.bind(this);\r\n    }\r\n\r\n    firstClick(){\r\n        this.setState({click:true});\r\n    }\r\n\r\n    //After getting user input, we send a fetch request using appropriate query parameters\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        let userSubmission = this.Submission.value.trim();\r\n        if(userSubmission){\r\n            this.Submission.value = '';\r\n        }\r\n        this.setState({searchTerm: userSubmission});\r\n        this.fetchGiphyData(userSubmission);\r\n    }\r\n\r\n    fetchGiphyData(userSubmission){\r\n        fetch(`https://sheltered-oasis-13181.herokuapp.com/http://api.giphy.com/v1/gifs/search?q=${userSubmission}&limit=24&api_key=OCCArgS2EYvkFFV3JhFhd64xt5zIKxDT`)\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(myJson => {\r\n          urlArray = [];\r\n          //The first for loop allows us to enter our data array, the second searches for the existence of images key, if it exists, we push it to our global array\r\n          for(let i=0; i<myJson.data.length; i++){\r\n              for(let key in myJson.data[i]){\r\n                  if(key==='images'){\r\n                      urlArray.push(myJson.data[i][key].fixed_height.url);\r\n                  }\r\n              }\r\n          }\r\n          this.setState({urlArray:urlArray});\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        //Takes the image urls held in our global array and prepares them to be added to the DOM via JSX\r\n        const images = urlArray.map(image=><div className=\"image-holder\"><a href={image} target=\"_blank\" rel=\"noopener noreferrer\"><img src={image} key={image} alt=\"gif-choice\" /></a></div>);\r\n\r\n        //First render view -- landing -- we see the search bar, welcome message and SANTA\r\n        if(this.state.click===false){\r\n            return(\r\n                <div className=\"submission-holder\">\r\n                    <form className = \"test\" onSubmit = {this.handleSubmit}  >\r\n                        <input placeholder=\"Look up something cool\" ref={input => this.Submission = input}></input>\r\n                        <button type=\"submit\" onClick={this.firstClick}> Submit </button>\r\n                    </form>\r\n                    <div className=\"home-container\"><img src=\"https://sheltered-oasis-13181.herokuapp.com/https://github.com/hzba000/giphy-search/blob/master/public/santa.gif\" alt=\"santa\"/><h2>Start looking for fun gifs above!</h2></div>\r\n                 </div>\r\n            )\r\n        }\r\n\r\n        //Second render view - If there are no gifs in our global array and the user has clicked past the landing view, show no results\r\n        if(urlArray.length===0 && this.state.click ===true){\r\n            return(\r\n                <div className=\"submission-holder\">\r\n                    <form className = \"test\" onSubmit = {this.handleSubmit}  >\r\n                        <input placeholder=\"Look up something cool\" ref={input => this.Submission = input}></input>\r\n                        <button type=\"submit\" onClick={this.firstClick}> Submit </button>\r\n                    </form>\r\n                    <div classname=\"error-container\"><h2>Hmmmm...didn't turn up any results! Try again.</h2></div>\r\n                </div> \r\n            )\r\n        }\r\n        \r\n        //Third render view - If gifs are available, render them to the screen\r\n        else{\r\n            return(\r\n                <div className=\"submission-holder\">\r\n                    <form className = \"test\" onSubmit = {this.handleSubmit}  >\r\n                        <input placeholder=\"Look up something cool\" ref={input => this.Submission = input}></input>\r\n                        <button type=\"submit\" onClick={this.firstClick}> Submit </button>\r\n                    </form>\r\n                    <div className=\"image-flex-container\">{images}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Submission from './components/Submission';\r\n\r\n//This Main component exists as a hub for connecting my various components together\r\n//Because this assignment only asked for one real component, I am leaving this as a placeholder for future expansion\r\nexport class Main extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={}\r\n    }\r\n    render(){\r\n        return(\r\n            <div><Submission /></div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Main} from './Main';\n\nReactDOM.render(<Main />, document.getElementById('root'));"],"sourceRoot":""}